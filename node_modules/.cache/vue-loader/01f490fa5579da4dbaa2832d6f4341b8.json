{"remainingRequest":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/src/components/AltChat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/src/components/AltChat.vue","mtime":1614867852928},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNoYXQgewogIHdpZHRoOiA0NTBweDsKfQoKLmNoYXQtYm94IHsKICBvdmVyZmxvdzogYXV0bzsKICBoZWlnaHQ6IDQwMHB4Owp9CgoubWVzc2FnZSB7CiAgd2lkdGg6IDU1JTsKICBmbG9hdDogbGVmdDsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIGJhY2tncm91bmQ6ICM1MTg3YmE3YTsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgcGFkZGluZzogNHB4OwogIG1hcmdpbjogNXB4IDA7Cn0KCi5tZXNzYWdlLm1lIHsKICBmbG9hdDogcmlnaHQ7CiAgYmFja2dyb3VuZDogIzcwYmE1MTdhOwp9CgouY2hhdC1pbnB1dCB7CiAgZGlzcGxheTogZmxleDsKfQoKLmNoYXQtaW5wdXQgdGV4dGFyZWEgewogIGZsZXgtZ3JvdzogMTsKICBoZWlnaHQ6IDMycHg7Cn0KCi5jaGF0LWlucHV0IGJ1dHRvbiB7CiAgbWFyZ2luOiAwOwp9Cgoubm90aWNlLWJveDpob3ZlciB7IGJhY2tncm91bmQtY29sb3I6ICNmZjljMDA7IH0KLm5vdGljZS1ib3ggewogIGJhY2tncm91bmQtY29sb3I6ICNlOGEyMzU7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGNvbG9yOiAjZmVmZWZiOwogIGZvbnQtd2VpZ2h0OmJvbGQ7CiAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlOwogIGxldHRlci1zcGFjaW5nOiAxcHg7Cn0KCg=="},{"version":3,"sources":["AltChat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AltChat.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  <div class=\"AltChat\">\n    <div id=\"chatbox_1\" ref=\"box\" class=\"chat-box\">\n      <p id=\"prg\"\n          v-for=\"(message, i) in messages\"\n          :key=\"i\"\n          :class=\"{\n          message: true,\n          me: message.participantId === $magpie.socket.participantId\n        }\"\n          v-text=\"message.message\"\n      ></p>\n    </div>\n    <div class=\"notice-box\">{{active}}</div>\n    <div class=\"chat-input\">\n      <textarea\n          ref=\"text\"\n          cols=\"50\"\n          placeholder=\"Type your message to the other participant here.\"\n          @keydown.enter=\"send\"\n      ></textarea>\n      <button @click.stop=\"send()\" @v>\n        Send\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nconst EVENT_CHAT_MESSAGE = 'chat_message';\nconst EVENT_CHAT_ACTIVE = 'inactive';\n\nexport default {\n  name: 'AltChat',\n  data() {\n    return {\n      messages: [],\n      statusMonitor: {},\n      active: \"Your chat partner has not yet entered the chat.\"\n    };\n  },\n  socket: {\n    [EVENT_CHAT_MESSAGE](payload) {\n      this.messages.push(payload);\n      Vue.nextTick(() => {\n        this.$refs.box.scrollTop = this.$refs.box.scrollHeight;\n      });\n      this.$emit('update:messages', this.messages);\n    },\n    [EVENT_CHAT_ACTIVE](payload) {\n      this.statusMonitor[payload.participantId] = payload;\n      this.$emit('update:statusMonitor', this.statusMonitor);\n    }\n  },\n  EVENT_CHAT_MESSAGE,\n  EVENT_CHAT_ACTIVE,\n  created () {\n    this.monitorActivity()\n  },\n  deactivated() {\n    clearInterval(this.update);\n  },\n  methods: {\n    send() {\n      const message = this.$refs.text.value;\n      if (!message) {\n        return;\n      }\n      this.$magpie.socket.broadcast(EVENT_CHAT_MESSAGE, {\n        message,\n        participantId: this.$magpie.socket.participantId\n      });\n      this.$refs.text.value = '';\n      this.$refs.text.focus();\n    },\n    monitorActivity(){\n      this.update = setInterval(() => {\n        // set yourself active\n        this.$magpie.socket.broadcast(EVENT_CHAT_ACTIVE, {\n          status: \"active\",\n          participantId: this.$magpie.socket.participantId,\n          lastUpdated: new Date()\n        });\n        // check if partner is active\n        for (let [participantID, status] of Object.entries(this.statusMonitor)) {\n          console.log(this.statusMonitor)\n          if (participantID != this.$magpie.socket.participantId) {\n            if (status.status === \"active\") {\n              if ((new Date() - new Date(status.lastUpdated)) > 15 * 1000) {\n                // If there's no response after 30 seconds, partner has left the chat\n                this.active = \"Your chat partner has left the chat. Please click [leave chat] to finish the experiment.\";\n              } else {\n                this.active = \"Your chat partner is active\";\n              }\n            }\n          }\n          console.log(this.active);\n        }\n      }, 3000)\n    }\n  }\n};\n</script>\n\n\n<style>\n.chat {\n  width: 450px;\n}\n\n.chat-box {\n  overflow: auto;\n  height: 400px;\n}\n\n.message {\n  width: 55%;\n  float: left;\n  text-align: left;\n  background: #5187ba7a;\n  border-radius: 4px;\n  padding: 4px;\n  margin: 5px 0;\n}\n\n.message.me {\n  float: right;\n  background: #70ba517a;\n}\n\n.chat-input {\n  display: flex;\n}\n\n.chat-input textarea {\n  flex-grow: 1;\n  height: 32px;\n}\n\n.chat-input button {\n  margin: 0;\n}\n\n.notice-box:hover { background-color: #ff9c00; }\n.notice-box {\n  background-color: #e8a235;\n  border-radius: 4px;\n  color: #fefefb;\n  font-weight:bold;\n  text-transform:uppercase;\n  letter-spacing: 1px;\n}\n\n</style>\n"]}]}