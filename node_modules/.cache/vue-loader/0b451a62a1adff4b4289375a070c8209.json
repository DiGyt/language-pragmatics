{"remainingRequest":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/magpie-base/src/components/interactive/Chat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/magpie-base/src/components/interactive/Chat.vue","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dirk/WebstormProjects/chat_experiment/language-pragmatics/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2hhdCB7CiAgd2lkdGg6IDQ1MHB4Owp9CgouY2hhdC1ib3ggewogIG92ZXJmbG93OiBhdXRvOwogIGhlaWdodDogNDAwcHg7Cn0KCi5tZXNzYWdlIHsKICB3aWR0aDogNTUlOwogIGZsb2F0OiBsZWZ0OwogIHRleHQtYWxpZ246IGxlZnQ7CiAgYmFja2dyb3VuZDogIzUxODdiYTdhOwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBwYWRkaW5nOiA0cHg7CiAgbWFyZ2luOiA1cHggMDsKfQoKLm1lc3NhZ2UubWUgewogIGZsb2F0OiByaWdodDsKICBiYWNrZ3JvdW5kOiAjNzBiYTUxN2E7Cn0KCi5jaGF0LWlucHV0IHsKICBkaXNwbGF5OiBmbGV4Owp9CgouY2hhdC1pbnB1dCB0ZXh0YXJlYSB7CiAgZmxleC1ncm93OiAxOwogIGhlaWdodDogMzJweDsKfQoKLmNoYXQtaW5wdXQgYnV0dG9uIHsKICBtYXJnaW46IDA7Cn0K"},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Chat.vue","sourceRoot":"node_modules/magpie-base/src/components/interactive","sourcesContent":["<docs>\nThis interactive component provides participants the opportunity to chat with each other, if they are in the same room.\n\n```vue\n<Experiment>\n  <template #screens>\n    <ConnectInteractive />\n    <Screen>\n      <Chat />\n    </Screen>\n  </template>\n</Experiment>\n```\n\n\n</docs>\n<template>\n  <div class=\"chat\">\n    <div ref=\"box\" class=\"chat-box\">\n      <p\n        v-for=\"(message, i) in messages\"\n        :key=\"i\"\n        :class=\"{\n          message: true,\n          me: message.participantId === $magpie.socket.participantId\n        }\"\n        v-text=\"message.message\"\n      ></p>\n    </div>\n    <div class=\"chat-input\">\n      <textarea\n        ref=\"text\"\n        cols=\"50\"\n        placeholder=\"Type your message to the other participant here.\"\n        @keydown.enter=\"send\"\n      ></textarea>\n      <button @click.stop=\"send()\">\n        Send\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nconst EVENT_CHAT_MESSAGE = 'chat_message';\n\nexport default {\n  name: 'Chat',\n  data() {\n    return {\n      messages: []\n    };\n  },\n  socket: {\n    [EVENT_CHAT_MESSAGE](payload) {\n      this.messages.push(payload);\n      Vue.nextTick(() => {\n        this.$refs.box.scrollTop = this.$refs.box.scrollHeight;\n      });\n    }\n  },\n  EVENT_CHAT_MESSAGE,\n  methods: {\n    send() {\n      const message = this.$refs.text.value;\n      if (!message) {\n        return;\n      }\n      this.$magpie.socket.broadcast(EVENT_CHAT_MESSAGE, {\n        message,\n        participantId: this.$magpie.socket.participantId\n      });\n      this.$refs.text.value = '';\n      this.$refs.text.focus();\n    }\n  }\n};\n</script>\n<style>\n.chat {\n  width: 450px;\n}\n\n.chat-box {\n  overflow: auto;\n  height: 400px;\n}\n\n.message {\n  width: 55%;\n  float: left;\n  text-align: left;\n  background: #5187ba7a;\n  border-radius: 4px;\n  padding: 4px;\n  margin: 5px 0;\n}\n\n.message.me {\n  float: right;\n  background: #70ba517a;\n}\n\n.chat-input {\n  display: flex;\n}\n\n.chat-input textarea {\n  flex-grow: 1;\n  height: 32px;\n}\n\n.chat-input button {\n  margin: 0;\n}\n</style>\n"]}]}